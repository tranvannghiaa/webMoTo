#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webMoTo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebMoTo")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHangXe(HangXe instance);
    partial void UpdateHangXe(HangXe instance);
    partial void DeleteHangXe(HangXe instance);
    partial void InsertLoaiMoTo(LoaiMoTo instance);
    partial void UpdateLoaiMoTo(LoaiMoTo instance);
    partial void DeleteLoaiMoTo(LoaiMoTo instance);
    partial void InsertMoTo(MoTo instance);
    partial void UpdateMoTo(MoTo instance);
    partial void DeleteMoTo(MoTo instance);
    #endregion
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public MyDataDataContext():
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebMoToConnectionString"].ConnectionString, mappingSource)
        {
        }

        public System.Data.Linq.Table<HangXe> HangXes
		{
			get
			{
				return this.GetTable<HangXe>();
			}
		}
		
		public System.Data.Linq.Table<LoaiMoTo> LoaiMoTos
		{
			get
			{
				return this.GetTable<LoaiMoTo>();
			}
		}
		
		public System.Data.Linq.Table<MoTo> MoTos
		{
			get
			{
				return this.GetTable<MoTo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangXe")]
	public partial class HangXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHang;
		
		private string _tenHang;
		
		private EntitySet<MoTo> _MoTos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHangChanging(string value);
    partial void OnmaHangChanged();
    partial void OntenHangChanging(string value);
    partial void OntenHangChanged();
    #endregion
		
		public HangXe()
		{
			this._MoTos = new EntitySet<MoTo>(new Action<MoTo>(this.attach_MoTos), new Action<MoTo>(this.detach_MoTos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHang", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHang
		{
			get
			{
				return this._maHang;
			}
			set
			{
				if ((this._maHang != value))
				{
					this.OnmaHangChanging(value);
					this.SendPropertyChanging();
					this._maHang = value;
					this.SendPropertyChanged("maHang");
					this.OnmaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenHang
		{
			get
			{
				return this._tenHang;
			}
			set
			{
				if ((this._tenHang != value))
				{
					this.OntenHangChanging(value);
					this.SendPropertyChanging();
					this._tenHang = value;
					this.SendPropertyChanged("tenHang");
					this.OntenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_MoTo", Storage="_MoTos", ThisKey="maHang", OtherKey="maHang")]
		public EntitySet<MoTo> MoTos
		{
			get
			{
				return this._MoTos;
			}
			set
			{
				this._MoTos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoTos(MoTo entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = this;
		}
		
		private void detach_MoTos(MoTo entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiMoTo")]
	public partial class LoaiMoTo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoaiId;
		
		private string _TenLoai;
		
		private EntitySet<MoTo> _MoTos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiIdChanging(string value);
    partial void OnLoaiIdChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiMoTo()
		{
			this._MoTos = new EntitySet<MoTo>(new Action<MoTo>(this.attach_MoTos), new Action<MoTo>(this.detach_MoTos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiId", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoaiId
		{
			get
			{
				return this._LoaiId;
			}
			set
			{
				if ((this._LoaiId != value))
				{
					this.OnLoaiIdChanging(value);
					this.SendPropertyChanging();
					this._LoaiId = value;
					this.SendPropertyChanged("LoaiId");
					this.OnLoaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMoTo_MoTo", Storage="_MoTos", ThisKey="LoaiId", OtherKey="LoaiId")]
		public EntitySet<MoTo> MoTos
		{
			get
			{
				return this._MoTos;
			}
			set
			{
				this._MoTos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoTos(MoTo entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMoTo = this;
		}
		
		private void detach_MoTos(MoTo entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMoTo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoTo")]
	public partial class MoTo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Hinh;
		
		private System.Nullable<int> _SLT;
		
		private string _NSX;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<System.DateTime> _NgayDangKy;
		
		private System.Nullable<int> _DTXiLanh;
		
		private string _LoaiId;
		
		private string _maHang;
		
		private EntityRef<HangXe> _HangXe;
		
		private EntityRef<LoaiMoTo> _LoaiMoTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnSLTChanging(System.Nullable<int> value);
    partial void OnSLTChanged();
    partial void OnNSXChanging(string value);
    partial void OnNSXChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnNgayDangKyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangKyChanged();
    partial void OnDTXiLanhChanging(System.Nullable<int> value);
    partial void OnDTXiLanhChanged();
    partial void OnLoaiIdChanging(string value);
    partial void OnLoaiIdChanged();
    partial void OnmaHangChanging(string value);
    partial void OnmaHangChanged();
    #endregion
		
		public MoTo()
		{
			this._HangXe = default(EntityRef<HangXe>);
			this._LoaiMoTo = default(EntityRef<LoaiMoTo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(50)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLT", DbType="Int")]
		public System.Nullable<int> SLT
		{
			get
			{
				return this._SLT;
			}
			set
			{
				if ((this._SLT != value))
				{
					this.OnSLTChanging(value);
					this.SendPropertyChanging();
					this._SLT = value;
					this.SendPropertyChanged("SLT");
					this.OnSLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="Char(4)")]
		public string NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDangKy
		{
			get
			{
				return this._NgayDangKy;
			}
			set
			{
				if ((this._NgayDangKy != value))
				{
					this.OnNgayDangKyChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKy = value;
					this.SendPropertyChanged("NgayDangKy");
					this.OnNgayDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTXiLanh", DbType="Int")]
		public System.Nullable<int> DTXiLanh
		{
			get
			{
				return this._DTXiLanh;
			}
			set
			{
				if ((this._DTXiLanh != value))
				{
					this.OnDTXiLanhChanging(value);
					this.SendPropertyChanging();
					this._DTXiLanh = value;
					this.SendPropertyChanged("DTXiLanh");
					this.OnDTXiLanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiId", DbType="Char(10)")]
		public string LoaiId
		{
			get
			{
				return this._LoaiId;
			}
			set
			{
				if ((this._LoaiId != value))
				{
					if (this._LoaiMoTo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiIdChanging(value);
					this.SendPropertyChanging();
					this._LoaiId = value;
					this.SendPropertyChanged("LoaiId");
					this.OnLoaiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHang", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string maHang
		{
			get
			{
				return this._maHang;
			}
			set
			{
				if ((this._maHang != value))
				{
					if (this._HangXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHangChanging(value);
					this.SendPropertyChanging();
					this._maHang = value;
					this.SendPropertyChanged("maHang");
					this.OnmaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_MoTo", Storage="_HangXe", ThisKey="maHang", OtherKey="maHang", IsForeignKey=true)]
		public HangXe HangXe
		{
			get
			{
				return this._HangXe.Entity;
			}
			set
			{
				HangXe previousValue = this._HangXe.Entity;
				if (((previousValue != value) 
							|| (this._HangXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangXe.Entity = null;
						previousValue.MoTos.Remove(this);
					}
					this._HangXe.Entity = value;
					if ((value != null))
					{
						value.MoTos.Add(this);
						this._maHang = value.maHang;
					}
					else
					{
						this._maHang = default(string);
					}
					this.SendPropertyChanged("HangXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMoTo_MoTo", Storage="_LoaiMoTo", ThisKey="LoaiId", OtherKey="LoaiId", IsForeignKey=true)]
		public LoaiMoTo LoaiMoTo
		{
			get
			{
				return this._LoaiMoTo.Entity;
			}
			set
			{
				LoaiMoTo previousValue = this._LoaiMoTo.Entity;
				if (((previousValue != value) 
							|| (this._LoaiMoTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiMoTo.Entity = null;
						previousValue.MoTos.Remove(this);
					}
					this._LoaiMoTo.Entity = value;
					if ((value != null))
					{
						value.MoTos.Add(this);
						this._LoaiId = value.LoaiId;
					}
					else
					{
						this._LoaiId = default(string);
					}
					this.SendPropertyChanged("LoaiMoTo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
